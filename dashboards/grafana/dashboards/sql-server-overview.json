{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "tooltip": false,
              "viz": false,
              "legend": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "time_series",
          "rawSql": "SELECT\n  CollectionTime AS time,\n  MetricValue AS value,\n  s.ServerName AS metric\nFROM dbo.PerformanceMetrics pm\nINNER JOIN dbo.Servers s ON pm.ServerID = s.ServerID\nWHERE pm.MetricCategory = 'CPU'\n  AND pm.MetricName = 'Percent'\n  AND pm.CollectionTime >= DATEADD(day, -7, GETUTCDATE())\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))\nORDER BY pm.CollectionTime ASC",
          "refId": "A"
        }
      ],
      "title": "CPU Usage (%)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "tooltip": false,
              "viz": false,
              "legend": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "time_series",
          "rawSql": "SELECT\n  CollectionTime AS time,\n  MetricValue AS value,\n  s.ServerName AS metric\nFROM dbo.PerformanceMetrics pm\nINNER JOIN dbo.Servers s ON pm.ServerID = s.ServerID\nWHERE pm.MetricCategory = 'Memory'\n  AND pm.MetricName = 'Percent'\n  AND pm.CollectionTime >= DATEADD(day, -7, GETUTCDATE())\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))\nORDER BY pm.CollectionTime ASC",
          "refId": "A"
        }
      ],
      "title": "Memory Usage (%)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "values": false,
          "calcs": [
            "lastNotNull"
          ],
          "fields": ""
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "10.2.0",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "table",
          "rawSql": "SELECT TOP 1\n  MetricValue\nFROM dbo.PerformanceMetrics pm\nINNER JOIN dbo.Servers s ON pm.ServerID = s.ServerID\nWHERE pm.MetricCategory = 'CPU'\n  AND pm.MetricName = 'Percent'\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))\nORDER BY pm.CollectionTime DESC",
          "refId": "A"
        }
      ],
      "title": "Current CPU",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 6,
        "y": 8
      },
      "id": 4,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "values": false,
          "calcs": [
            "lastNotNull"
          ],
          "fields": ""
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "10.2.0",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "table",
          "rawSql": "SELECT TOP 1\n  MetricValue\nFROM dbo.PerformanceMetrics pm\nINNER JOIN dbo.Servers s ON pm.ServerID = s.ServerID\nWHERE pm.MetricCategory = 'Memory'\n  AND pm.MetricName = 'Percent'\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))\nORDER BY pm.CollectionTime DESC",
          "refId": "A"
        }
      ],
      "title": "Current Memory",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 12,
        "y": 8
      },
      "id": 5,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "values": false,
          "calcs": [
            "lastNotNull"
          ],
          "fields": ""
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.2.0",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS value\nFROM dbo.Servers s\nWHERE s.IsActive = 1\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))",
          "refId": "A"
        }
      ],
      "title": "Active Servers",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 18,
        "y": 8
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "values": false,
          "calcs": [
            "lastNotNull"
          ],
          "fields": ""
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.2.0",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "table",
          "rawSql": "SELECT COUNT(*) AS value\nFROM dbo.PerformanceMetrics pm\nINNER JOIN dbo.Servers s ON pm.ServerID = s.ServerID\nWHERE pm.CollectionTime >= DATEADD(day, -7, GETUTCDATE())\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))",
          "refId": "A"
        }
      ],
      "title": "Metrics (24h)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "tooltip": false,
              "viz": false,
              "legend": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "MBs"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "time_series",
          "rawSql": "SELECT\n  pm.CollectionTime AS time,\n  pm.MetricValue AS value,\n  s.ServerName + ' - ' + pm.MetricName AS metric\nFROM dbo.PerformanceMetrics pm\nINNER JOIN dbo.Servers s ON pm.ServerID = s.ServerID\nWHERE pm.MetricCategory = 'Disk'\n  AND pm.MetricName IN ('ReadMBps', 'WriteMBps')\n  AND pm.CollectionTime >= DATEADD(day, -7, GETUTCDATE())\n  AND ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))\nORDER BY pm.CollectionTime ASC",
          "refId": "A"
        }
      ],
      "title": "Disk I/O (MB/s)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "mssql",
        "uid": "monitoringdb"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "IsActive"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "color": "red",
                        "index": 0,
                        "text": "Inactive"
                      },
                      "1": {
                        "color": "green",
                        "index": 1,
                        "text": "Active"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 8,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.2.0",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "monitoringdb"
          },
          "format": "table",
          "rawSql": "SELECT\n  s.ServerName,\n  s.Environment,\n  CASE WHEN s.IsActive = 1 THEN 1 ELSE 0 END AS IsActive,\n  s.CreatedDate\nFROM dbo.Servers s\nWHERE ('$__all' IN (${ServerName:singlequote}) OR s.ServerName IN (${ServerName:singlequote}))\nORDER BY s.IsActive DESC, s.ServerName ASC",
          "refId": "A"
        }
      ],
      "title": "Monitored Servers",
      "type": "table"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 9,
      "options": {
        "content": "# \ud83d\udcc8 SQL Server Overview - Quick Reference Guide\n\n## What This Dashboard Shows\n\nHigh-level overview of SQL Server health and performance across all monitored instances. This is your **executive summary** dashboard - quick glance at overall system health.\n\n### Dashboard Purpose\n\nThis dashboard provides:\n- Real-time performance metrics (CPU, Memory, I/O)\n- Trend analysis over time\n- Quick identification of problem servers\n- Historical comparison capabilities\n\n## \ud83d\udcca Metrics Explained\n\n### CPU Usage (%)\n**What it measures**: Total processor utilization for SQL Server instance\n- **<70%**: Healthy, normal operations\n- **70-85%**: Moderate load, monitor closely\n- **85-95%**: High load, performance degradation possible\n- **>95%**: Critical, queries will slow down\n\n**Common causes of high CPU**:\n- Complex queries without proper indexes\n- High parallelism (MAXDOP too high)\n- Statistics out of date (query plans inefficient)\n- Too many concurrent users\n\n### Memory Usage (%)\n**What it measures**: SQL Server buffer pool + procedure cache utilization\n- **<75%**: Good, plenty of headroom\n- **75-90%**: Normal for production workload\n- **90-95%**: Memory pressure, possible paging\n- **>95%**: Critical, queries reading from disk instead of memory\n\n**Common causes of high memory**:\n- Large result sets held in memory\n- Procedure cache bloat (too many plans)\n- Insufficient max memory setting\n- Memory leak in application\n\n### Disk I/O\n**What it measures**: Read/write operations per second\n- **Normal**: Varies by workload (100-1000 IOPS typical)\n- **High reads**: Large scans, missing indexes, cold cache\n- **High writes**: Heavy INSERT/UPDATE, checkpoint activity, log writes\n\n## \ud83c\udfaf How to Use This Dashboard\n\n### Quick Health Check (30 seconds)\n1. Open dashboard\n2. Check CPU/Memory gauges (all green = good)\n3. Scan time series for spikes or trends\n4. Note any red/orange indicators\n5. Drill down only if issues found\n\n### Compare Servers\n1. Select multiple servers from filter (if available)\n2. Compare CPU/Memory trends side-by-side\n3. Identify underutilized or overloaded instances\n4. Plan workload redistribution\n\n### Historical Analysis\n1. Use time range picker (top right)\n2. Set to specific incident window\n3. Correlate metrics with known events\n4. Compare before/after changes\n\n### Trend Identification\n1. Set time range to \"Last 30 days\"\n2. Look for gradual increases (growth trends)\n3. Identify cyclical patterns (business hours vs weekends)\n4. Spot anomalies (unexpected spikes/drops)\n\n## \ud83d\udd0d Common Scenarios\n\n### \"Is SQL Server healthy right now?\"\n- All CPU gauges <70% = Yes\n- All Memory gauges <90% = Yes\n- No red indicators = Yes\n- If any red, drill down to that server\n\n### \"Which server is having issues?\"\n1. Scan CPU/Memory gauges for red/orange\n2. Check time series for spikes\n3. Note server name\n4. Click server name or use filter to drill down\n5. Open Performance Analysis dashboard for that server\n\n### \"Did our deployment cause problems?\"\n1. Note deployment time\n2. Set time range to deployment window +/- 1 hour\n3. Look for CPU/Memory spikes at deployment time\n4. Check error rates in Audit Logging dashboard\n5. Compare to pre-deployment baseline\n\n### \"Are we growing out of capacity?\"\n1. Set time range to \"Last 6 months\"\n2. Look for upward trend in CPU/Memory\n3. Calculate growth rate (% per month)\n4. Extrapolate to future (when will we hit 90%?)\n5. Plan capacity upgrades proactively\n\n## \ud83d\udca1 Interpreting Time Series Charts\n\n### CPU Usage Over Time\n**Patterns to recognize**:\n- **Flat line**: Consistent workload (good!)\n- **Sawtooth**: Batch jobs running on schedule\n- **Spikes**: Ad-hoc queries or deployments\n- **Gradual climb**: Growth, need capacity planning\n- **Sudden drop**: Potential outage or workload shift\n\n### Memory Usage Over Time\n**Patterns to recognize**:\n- **Gradual climb then plateau**: Normal, SQL Server caching data\n- **Oscillating**: Possible memory pressure, cache flushing\n- **Sudden drops**: Server restart, cache cleared\n- **Persistent 100%**: Memory pressure, needs more RAM or tuning\n\n## \ud83d\udd27 Developer Actions\n\n### Performance Degradation\nIf you notice degraded performance:\n1. Check this dashboard for CPU/Memory issues\n2. Open Performance Analysis dashboard\n3. Identify slow queries\n4. Review execution plans\n5. Add missing indexes or optimize queries\n\n### Capacity Planning\nTo plan for growth:\n1. Export time series data (last 6 months)\n2. Calculate average growth rate\n3. Project 12 months forward\n4. Identify when you'll hit 80% capacity\n5. Budget for hardware upgrades\n\n### Pre-Deployment Check\nBefore deploying code:\n1. Capture current metrics (screenshot or export)\n2. Note baseline CPU/Memory values\n3. Deploy changes\n4. Monitor dashboard for 1 hour post-deployment\n5. Compare to baseline, rollback if degraded >20%\n\n## \u26a0\ufe0f Common Mistakes\n\n### 1. Ignoring Gradual Trends\n**Mistake**: Only looking at current values, missing slow growth\n**Fix**: Regularly review 30-day and 90-day trends\n\n### 2. Panicking Over Transient Spikes\n**Mistake**: Reacting to single 5-minute spike\n**Fix**: Look for sustained issues (>30 minutes) or patterns\n\n### 3. Comparing Apples to Oranges\n**Mistake**: Comparing production and dev server metrics directly\n**Fix**: Compare each server to its own baseline\n\n### 4. Not Correlating with Application Metrics\n**Mistake**: Looking at database metrics in isolation\n**Fix**: Cross-reference with application logs, user complaints\n\n## \ud83d\udcc8 Best Practices\n\n### Daily Monitoring\n- [ ] Check dashboard each morning\n- [ ] Scan for any red/orange indicators\n- [ ] Review overnight batch job impact\n- [ ] Note any anomalies for investigation\n\n### Weekly Review\n- [ ] Compare this week to last week\n- [ ] Identify trending issues (gradual increases)\n- [ ] Review capacity projections\n- [ ] Document any incidents and root causes\n\n### Monthly Reporting\n- [ ] Export 30-day trend data\n- [ ] Calculate average, peak, and P95 metrics\n- [ ] Present to management with capacity recommendations\n- [ ] Plan infrastructure changes if needed\n\n## \ud83d\udd17 Navigation\n\n### Drill-Down Workflow\n1. **Overview** (this dashboard) - Identify problem server\n2. **Performance Analysis** - Find slow queries on that server\n3. **Code Browser** - Review query source code\n4. **Table Details** - Check indexes on affected tables\n5. **Detailed Metrics** - Get granular metric history\n\n### Related Dashboards\n- **Performance Analysis**: Query-level performance\n- **Detailed Metrics**: Granular metric breakdown\n- **Audit Logging**: Security and compliance view\n- **Code Browser**: Database code exploration\n\n## \ud83c\udd98 When to Escalate to DBA\n\n- CPU sustained >90% for >15 minutes\n- Memory sustained >95% for >5 minutes\n- Any server showing red indicators for >1 hour\n- Unexplained performance degradation after review\n- Capacity projections showing <3 months until 90% utilization\n\n## \ud83d\udcda Additional Resources\n\n- **SQL Server Wait Statistics**: https://www.sqlskills.com/help/waits/\n- **Performance Tuning Guide**: https://learn.microsoft.com/en-us/sql/relational-databases/performance/\n- **Capacity Planning**: https://learn.microsoft.com/en-us/sql/sql-server/maximum-capacity-specifications-for-sql-server\n- **Best Practices**: https://learn.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server\n\n---\n*Auto-refreshes every 1 minute | Covers all monitored instances | Use filters to narrow focus*\n",
        "mode": "markdown"
      },
      "pluginVersion": "10.2.0",
      "title": "\ud83d\udcd6 Developer Guide - SQL Server Overview",
      "type": "text"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "sql-server",
    "performance",
    "monitoring"
  ],
  "templating": {
    "list": [
      {
        "allValue": "$__all",
        "current": {
          "selected": true,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "mssql",
          "uid": "monitoringdb"
        },
        "definition": "SELECT DISTINCT ServerName FROM dbo.Servers WHERE IsActive = 1 ORDER BY ServerName",
        "hide": 0,
        "includeAll": true,
        "label": "Server",
        "multi": true,
        "name": "ServerName",
        "options": [],
        "query": "SELECT DISTINCT ServerName FROM dbo.Servers WHERE IsActive = 1 ORDER BY ServerName",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "SQL Server Performance Overview",
  "uid": "sql-server-overview",
  "version": 1,
  "weekStart": ""
}